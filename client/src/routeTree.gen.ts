/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthProjectsImport } from './routes/_auth.projects'

// Create Virtual Routes

const RegistrationLazyImport = createFileRoute('/registration')()
const LoginLazyImport = createFileRoute('/login')()

// Create/Update Routes

const RegistrationLazyRoute = RegistrationLazyImport.update({
  path: '/registration',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/registration.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthProjectsRoute = AuthProjectsImport.update({
  path: '/projects',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/registration': {
      id: '/registration'
      path: '/registration'
      fullPath: '/registration'
      preLoaderRoute: typeof RegistrationLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/projects': {
      id: '/_auth/projects'
      path: '/projects'
      fullPath: '/projects'
      preLoaderRoute: typeof AuthProjectsImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRoute: AuthRoute.addChildren({ AuthProjectsRoute }),
  LoginLazyRoute,
  RegistrationLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/login",
        "/registration"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/projects"
      ]
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/registration": {
      "filePath": "registration.lazy.tsx"
    },
    "/_auth/projects": {
      "filePath": "_auth.projects.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
